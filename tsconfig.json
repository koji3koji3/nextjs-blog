{
  "compileOnSave": false,
  "compilerOptions": {
    "target": "esnext",
    "module": "esnext",
    "jsx": "preserve",
    "allowJs": true,
    "strict": true,
    "moduleResolution": "node",
    "allowSyntheticDefaultImports": true,
    "noUnusedLocals": true,
    "noUnusedParameters": true,
    "removeComments": false,
    "preserveConstEnums": true,
    "sourceMap": true,
    "skipLibCheck": true,
    "noImplicitAny": true,
    "strictNullChecks": true,
    "strictFunctionTypes": true,
    "strictBindCallApply": true,
    "strictPropertyInitialization": true,
    "noImplicitThis": true,
    "alwaysStrict": true,
    "baseUrl": "./",
    "paths": {
      "~/*": [
        "src/*"
      ]
    },
    "lib": [
      "dom",
      "es2016",
      "es2019.array"
    ],
    "typeRoots": [
      "node_modules/@types",
      "./types"
    ],
    "rootDirs": [
      "./pages",
      "./src"
    ],
    "forceConsistentCasingInFileNames": true,
    "noEmit": true,
    "esModuleInterop": true,
    "resolveJsonModule": true,
    "isolatedModules": true
  },
  "exclude": [
    "node_modules"
  ],
  "include": [
    "next-env.d.ts",
    "**/*.ts",
    "**/*.tsx"
  ]
}
//------------------------------------------------------------------------------
//strict : trueにすると暗黙的にすべてtrueになる項目(各falseを指定することも可能)
// --noImplicitAny
// --strictNullChecks
// --strictFunctionTypes
// --strictBindCallApply
// --strictPropertyInitialization
// --noImplicitThis
// --alwaysStrict
//1.暗黙的にanyになる値をエラーにする
//2.Nullableな値に対してプロパティの呼び出しを行う記述をエラーにする。
//3.関数代入時の引数の型チェックにおいて、
//TypeScriptのデフォルトはBivariantlyな挙動だが、
//このオプションをtrueにするとContravariantlyに型チェックが走るようになる。
//4.bind, call, applyを使用する際に、より厳密に型チェックが行われるようになる
//5.クラス定義時、インスタンス変数の初期化が宣言時、もしくはコンストラクタのどちらでも行われていない場合にエラーになる。
//6.使用されているthisの型が暗黙的にanyになる場合エラーにする
//7."use strict";を必ず全てのファイルの先頭行に付与する。
//------------------------------------------------------------------------------
